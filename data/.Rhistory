color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=no_cannabis$latitude, lng=no_cannabis$longitude,
radius=1, weight=1, color='blue',
label=paste(no_cannabis$County, '-'))
mycannabissalesmap
mycannabissalesmap <- my_summary_plot %>%
leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$reported/10^6,1)),
' Million USD', sep=''),
color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap
# user options
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_y = c('USD','perCapita','perStore')[2]
radiusscale = c(1, 10^5)[2]
estimate_option = T
y_options = c('USD.total','USD.reported','perCapita.total','perCapita.reported',
'perStore.total','perStore.reported')
y_incl = c(paste(my_y,'.total',sep=''), paste(my_y,'.reported',sep=''))
# Filter to only include 1 kind
my_summary_plot = my_summary %>% filter(kind==my_kind) %>%
select(County,kind,latitude,longitude,y_incl)
colnames(my_summary_plot)[5] = 'total'
colnames(my_summary_plot)[6] = 'reported'
no_cannabis <- my_summary_plot %>% filter(total==0)
with_cannabis <- my_summary_plot %>% filter(total>0)
with_reports <- my_summary_plot %>% filter(reported>0)
only_estimates <- my_summary_plot %>% filter(reported==0 & total>0)
#
mycannabissalesmap <- my_summary_plot %>%
leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6)
if (estimate_option) {
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$total/10^6,1)),
' Million USD', sep=''),
color='gray',weight=1,fillOpacity = 0.3)
} else{
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=only_estimates$latitude,
lng=only_estimates$longitude,
radius = 1,
label=paste(only_estimates$County,': NR', sep=''),
color='red',weight=1)
}
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$reported/10^6,1)),
' Million USD', sep=''),
color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=no_cannabis$latitude, lng=no_cannabis$longitude,
radius=1, weight=1, color='blue',
label=paste(no_cannabis$County, '-'))
mycannabissalesmap
# user options
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_y = c('USD','perCapita','perStore')[3]
radiusscale = c(1, 10^5, 1000)[3]
estimate_option = T
y_options = c('USD.total','USD.reported','perCapita.total','perCapita.reported',
'perStore.total','perStore.reported')
y_incl = c(paste(my_y,'.total',sep=''), paste(my_y,'.reported',sep=''))
# Filter to only include 1 kind
my_summary_plot = my_summary %>% filter(kind==my_kind) %>%
select(County,kind,latitude,longitude,y_incl)
colnames(my_summary_plot)[5] = 'total'
colnames(my_summary_plot)[6] = 'reported'
no_cannabis <- my_summary_plot %>% filter(total==0)
with_cannabis <- my_summary_plot %>% filter(total>0)
with_reports <- my_summary_plot %>% filter(reported>0)
only_estimates <- my_summary_plot %>% filter(reported==0 & total>0)
#
mycannabissalesmap <- my_summary_plot %>%
leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6)
if (estimate_option) {
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$total/10^6,1)),
' Million USD', sep=''),
color='gray',weight=1,fillOpacity = 0.3)
} else{
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=only_estimates$latitude,
lng=only_estimates$longitude,
radius = 1,
label=paste(only_estimates$County,': NR', sep=''),
color='red',weight=1)
}
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$reported/10^6,1)),
' Million USD', sep=''),
color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=no_cannabis$latitude, lng=no_cannabis$longitude,
radius=1, weight=1, color='blue',
label=paste(no_cannabis$County, '-'))
mycannabissalesmap
# user options
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_y = c('USD','perCapita','perStore')[3]
radiusscale = c(1, 10^5, 100)[3]
estimate_option = T
y_options = c('USD.total','USD.reported','perCapita.total','perCapita.reported',
'perStore.total','perStore.reported')
y_incl = c(paste(my_y,'.total',sep=''), paste(my_y,'.reported',sep=''))
# Filter to only include 1 kind
my_summary_plot = my_summary %>% filter(kind==my_kind) %>%
select(County,kind,latitude,longitude,y_incl)
colnames(my_summary_plot)[5] = 'total'
colnames(my_summary_plot)[6] = 'reported'
no_cannabis <- my_summary_plot %>% filter(total==0)
with_cannabis <- my_summary_plot %>% filter(total>0)
with_reports <- my_summary_plot %>% filter(reported>0)
only_estimates <- my_summary_plot %>% filter(reported==0 & total>0)
#
mycannabissalesmap <- my_summary_plot %>%
leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6)
if (estimate_option) {
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$total/10^6,1)),
' Million USD', sep=''),
color='gray',weight=1,fillOpacity = 0.3)
} else{
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=only_estimates$latitude,
lng=only_estimates$longitude,
radius = 1,
label=paste(only_estimates$County,': NR', sep=''),
color='red',weight=1)
}
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$reported/10^6,1)),
' Million USD', sep=''),
color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=no_cannabis$latitude, lng=no_cannabis$longitude,
radius=1, weight=1, color='blue',
label=paste(no_cannabis$County, '-'))
mycannabissalesmap
# user options
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_y = c('USD','perCapita','perStore')[3]
radiusscale = c(1, 10^5, 10)[3]
estimate_option = T
y_options = c('USD.total','USD.reported','perCapita.total','perCapita.reported',
'perStore.total','perStore.reported')
y_incl = c(paste(my_y,'.total',sep=''), paste(my_y,'.reported',sep=''))
# Filter to only include 1 kind
my_summary_plot = my_summary %>% filter(kind==my_kind) %>%
select(County,kind,latitude,longitude,y_incl)
colnames(my_summary_plot)[5] = 'total'
colnames(my_summary_plot)[6] = 'reported'
no_cannabis <- my_summary_plot %>% filter(total==0)
with_cannabis <- my_summary_plot %>% filter(total>0)
with_reports <- my_summary_plot %>% filter(reported>0)
only_estimates <- my_summary_plot %>% filter(reported==0 & total>0)
#
mycannabissalesmap <- my_summary_plot %>%
leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6)
if (estimate_option) {
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$total/10^6,1)),
' Million USD', sep=''),
color='gray',weight=1,fillOpacity = 0.3)
} else{
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=only_estimates$latitude,
lng=only_estimates$longitude,
radius = 1,
label=paste(only_estimates$County,': NR', sep=''),
color='red',weight=1)
}
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$reported/10^6,1)),
' Million USD', sep=''),
color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=no_cannabis$latitude, lng=no_cannabis$longitude,
radius=1, weight=1, color='blue',
label=paste(no_cannabis$County, '-'))
mycannabissalesmap
# user options
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_y = c('USD','perCapita','perStore')[3]
radiusscale = c(1, 10^5, 30)[3]
estimate_option = T
y_options = c('USD.total','USD.reported','perCapita.total','perCapita.reported',
'perStore.total','perStore.reported')
y_incl = c(paste(my_y,'.total',sep=''), paste(my_y,'.reported',sep=''))
# Filter to only include 1 kind
my_summary_plot = my_summary %>% filter(kind==my_kind) %>%
select(County,kind,latitude,longitude,y_incl)
colnames(my_summary_plot)[5] = 'total'
colnames(my_summary_plot)[6] = 'reported'
no_cannabis <- my_summary_plot %>% filter(total==0)
with_cannabis <- my_summary_plot %>% filter(total>0)
with_reports <- my_summary_plot %>% filter(reported>0)
only_estimates <- my_summary_plot %>% filter(reported==0 & total>0)
#
mycannabissalesmap <- my_summary_plot %>%
leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6)
if (estimate_option) {
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$total/10^6,1)),
' Million USD', sep=''),
color='gray',weight=1,fillOpacity = 0.3)
} else{
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=only_estimates$latitude,
lng=only_estimates$longitude,
radius = 1,
label=paste(only_estimates$County,': NR', sep=''),
color='red',weight=1)
}
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$reported/10^6,1)),
' Million USD', sep=''),
color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=no_cannabis$latitude, lng=no_cannabis$longitude,
radius=1, weight=1, color='blue',
label=paste(no_cannabis$County, '-'))
mycannabissalesmap
# user options
# options for users
my_kind = c('Combined','medical','recreational')[1]
my_y = c('USD','perCapita','perStore')[3]
radiusscale = c(1, 10^5, 30)[3]
estimate_option = T
y_options = c('USD.total','USD.reported','perCapita.total','perCapita.reported',
'perStore.total','perStore.reported')
y_incl = c(paste(my_y,'.total',sep=''), paste(my_y,'.reported',sep=''))
# Filter to only include 1 kind
my_summary_plot = my_summary %>% filter(kind==my_kind) %>%
select(County,kind,latitude,longitude,y_incl)
colnames(my_summary_plot)[5] = 'total'
colnames(my_summary_plot)[6] = 'reported'
no_cannabis <- my_summary_plot %>% filter(total==0)
with_cannabis <- my_summary_plot %>% filter(total>0)
with_reports <- my_summary_plot %>% filter(reported>0)
only_estimates <- my_summary_plot %>% filter(reported==0 & total>0)
#
mycannabissalesmap <- my_summary_plot %>%
leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6)
if (estimate_option) {
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$total/10^6,1)),
' Million USD', sep=''),
color='gray',weight=1,fillOpacity = 0.3)
} else{
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=only_estimates$latitude,
lng=only_estimates$longitude,
radius = 1,
label=paste(only_estimates$County,': NR', sep=''),
color='red',weight=1)
}
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$reported/10^6,1)),
' Million USD', sep=''),
color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=no_cannabis$latitude, lng=no_cannabis$longitude,
radius=1, weight=1, color='blue',
label=paste(no_cannabis$County, '-'))
mycannabissalesmap
# user options
# options for users
my_kind = c('Combined','medical','recreational')[1]
my_y = c('USD','perCapita','perStore')[2]
radiusscale = c(1, 10^5, 30)[2]
estimate_option = T
y_options = c('USD.total','USD.reported','perCapita.total','perCapita.reported',
'perStore.total','perStore.reported')
y_incl = c(paste(my_y,'.total',sep=''), paste(my_y,'.reported',sep=''))
# Filter to only include 1 kind
my_summary_plot = my_summary %>% filter(kind==my_kind) %>%
select(County,kind,latitude,longitude,y_incl)
colnames(my_summary_plot)[5] = 'total'
colnames(my_summary_plot)[6] = 'reported'
no_cannabis <- my_summary_plot %>% filter(total==0)
with_cannabis <- my_summary_plot %>% filter(total>0)
with_reports <- my_summary_plot %>% filter(reported>0)
only_estimates <- my_summary_plot %>% filter(reported==0 & total>0)
#
mycannabissalesmap <- my_summary_plot %>%
leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6)
if (estimate_option) {
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$total/10^6,1)),
' Million USD', sep=''),
color='gray',weight=1,fillOpacity = 0.3)
} else{
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=only_estimates$latitude,
lng=only_estimates$longitude,
radius = 1,
label=paste(only_estimates$County,': NR', sep=''),
color='red',weight=1)
}
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$reported/10^6,1)),
' Million USD', sep=''),
color='darkgreen',weight = 1,fillOpacity = .3)
mycannabissalesmap <- mycannabissalesmap %>%
addCircles(lat=no_cannabis$latitude, lng=no_cannabis$longitude,
radius=1, weight=1, color='blue',
label=paste(no_cannabis$County, '-'))
mycannabissalesmap
only_estimates
my_summary %>% filter(County=='San Juan')
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude),
Population=mean(Population)) %>%
filter(!is.na(County))
my_summary_total <- cannabis.summary %>% group_by(County,kind) %>%
summarise(n.stores=mean(n.stores),
latitude=mean(latitude),
longitude=mean(longitude),
Population=mean(Population)
USD.total=sum(USD),
my_summary_total <- cannabis.summary %>% group_by(County,kind) %>%
summarise(n.stores=mean(n.stores),
latitude=mean(latitude),
longitude=mean(longitude),
Population=mean(Population),
USD.total=sum(USD),
perCapita.total=sum(perCapita),
perStore.total=sum(perStore))
my_summary_reported <- filter(cannabis.summary,!is.Estimate) %>%
rename(USD.reported=USD,
perCapita.reported=perCapita,
perStore.reported=perStore)
my_summary <- full_join(my_summary_total,my_summary_reported,
by = c("County", "kind", "n.stores", "latitude", "longitude"))
my_summary
knitr::opts_chunk$set(echo = TRUE)
#Clear environment
rm(list=ls())
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(XLConnect) # reads excel
library(leaflet) # creates maps
library(prettydoc) # html formatting
source("http://peterhaschke.com/Code/multiplot.R")
setwd('../data')
source('get_data.R')
# Create summary for each County and Type, summing sales across years
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude),
Population=mean(Population)) %>%
filter(!is.na(County))
knitr::opts_chunk$set(echo = TRUE)
#Clear environment
rm(list=ls())
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(XLConnect) # reads excel
library(leaflet) # creates maps
library(prettydoc) # html formatting
source("http://peterhaschke.com/Code/multiplot.R")
setwd('../data')
source('get_data.R')
knitr::opts_chunk$set(echo = TRUE)
#Clear environment
rm(list=ls())
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(XLConnect) # reads excel
library(leaflet) # creates maps
library(prettydoc) # html formatting
source("http://peterhaschke.com/Code/multiplot.R")
setwd('../data')
source('get_data.R')
source('get_data.R')
setwd("C:/Users/Darren/Dropbox/R_DataScience/cannabis/Cannabis_Sales_CO/visualize")
source('get_data.R')
setwd('../data')
source('get_data.R')
setwd('../data')
setwd("C:/Users/Darren/Dropbox/R_DataScience/cannabis/Cannabis_Sales_CO/visualize")
source('get_data.R')
setwd("C:/Users/Darren/Dropbox/R_DataScience/cannabis/Cannabis_Sales_CO/data")
source('get_data.R')
list.files()
source('get_data.R')
opts_knit$set(root.dir = '../data')
library(knitr)
opts_knit$set(root.dir = '../data')
source('get_data.R')
list.files()
source('get_data.R')
knitr::opts_chunk$set(echo = TRUE)
#Clear environment
rm(list=ls())
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(XLConnect) # reads excel
library(leaflet) # creates maps
library(prettydoc) # html formatting
library(knitr)
source("http://peterhaschke.com/Code/multiplot.R")
opts_knit$set(root.dir = '../data')
source('get_data.R')
source('../get_data.R')
