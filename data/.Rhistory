cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
# Filter to only include 1 kind
my_summary = cannabis.summary %>% filter(kind==my_kind) %>% arrange(USD)
if (estimate_option){
my_summary_plot <- my_summary %>% group_by(County) %>%
summarise(n.stores=mean(n.stores),
latitude=mean(latitude),
longitude=mean(longitude),
USD.total=sum(USD),
perCapita.total=sum(perCapita),
perStore.total=sum(perStore))
my_summary_reported <- filter(my_summary,!is.Estimate) %>%
select(County,USD:perStore) %>%
rename(USD.reported=USD,
perCapita.reported=perCapita,
perStore.reported=perStore)
my_summary_plot <- full_join(my_summary_plot,my_summary_reported)
} else {
mysummary_plot <- filter(my_summary,!is.Estimate)
}
my_summary_plot
#Thunderforest API Key Required Thuderforest.Transport Thundrforest.Landscape Thunderforest.Pioneer
my_summary_plot %>% leaflet() %>% addProviderTiles(providers$CartoDB) %>%
addCircles(radius=sqrt(my_summary_plot$USD.total)*2,
weight=0,
color='green',
fillOpacity = .3)
knitr::opts_chunk$set(echo = TRUE)
setwd('../data')
source('get_data.R')
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_dollartype = c('USD Total','perCapita','perStore')[1]
estimate_option = T
# Create summary for each County and Type, summing sales across years
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
# Filter to only include 1 kind
my_summary = cannabis.summary %>% filter(kind==my_kind) %>% arrange(USD)
if (estimate_option){
my_summary_plot <- my_summary %>% group_by(County) %>%
summarise(n.stores=mean(n.stores),
latitude=mean(latitude),
longitude=mean(longitude),
USD.total=sum(USD),
perCapita.total=sum(perCapita),
perStore.total=sum(perStore))
my_summary_reported <- filter(my_summary,!is.Estimate) %>%
select(County,USD:perStore) %>%
rename(USD.reported=USD,
perCapita.reported=perCapita,
perStore.reported=perStore)
my_summary_plot <- full_join(my_summary_plot,my_summary_reported)
} else {
mysummary_plot <- filter(my_summary,!is.Estimate)
}
my_summary_plot
#Thunderforest API Key Required Thuderforest.Transport Thundrforest.Landscape Thunderforest.Pioneer
my_summary_plot %>% leaflet() %>% addProviderTiles(providers$CartoDB) %>%
addCircles(radius=sqrt(my_summary_plot$USD.total)*2,
weight=0,
color='green',
fillOpacity = .3)
knitr::opts_chunk$set(echo = TRUE)
setwd('../data')
source('get_data.R')
cannabis.summary
cannabis.sales
cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
warnings()
cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind)
cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude))
knitr::opts_chunk$set(echo = TRUE)
setwd('../data')
source('get_data.R')
cannabis.sales
cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind)
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
traceback()
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
#USD=sum(USD,na.rm=T),
#perCapita=sum(perCapita,na.rm=T),
#perStore=sum(perStore,na.rm=T),
#latitude=mean(latitude),
#longitude=mean(longitude)) %>%
filter(!is.na(County))
# Filter to only include 1 kind
my_summary = cannabis.summary %>% filter(kind==my_kind) %>% arrange(USD)
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
#USD=sum(USD,na.rm=T),
#perCapita=sum(perCapita,na.rm=T),
#perStore=sum(perStore,na.rm=T),
#latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
longitude=mean(longitude)
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
#USD=sum(USD,na.rm=T),
#perCapita=sum(perCapita,na.rm=T),
#perStore=sum(perStore,na.rm=T),
#latitude=mean(latitude),
#longitude=mean(longitude)
) %>%
filter(!is.na(County))
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
#perCapita=sum(perCapita,na.rm=T),
#perStore=sum(perStore,na.rm=T),
#latitude=mean(latitude),
#longitude=mean(longitude)
) %>%
filter(!is.na(County))
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)
) %>%
filter(!is.na(County))
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
#longitude=mean(longitude)
) %>%
filter(!is.na(County))
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
#latitude=mean(latitude),
#longitude=mean(longitude)
) %>%
filter(!is.na(County))
cannabis.sales$latitude %>% summarise()
cannabis.sales$latitude %>% summary()
cannabis.sales %>% glimpse()
zip_file = 'zip_codes_states.csv'
if(!file.exists(zip_file)){
url = 'http://notebook.gaslampmedia.com/wp-content/uploads/2013/08/zip_codes_states.csv'
download.file(url,zip_file)}
co_zipcodes <- read.csv(zip_file, stringsAsFactors = F) %>% filter(state=='CO')
county_centers <- co_zipcodes %>%
filter(state=='CO') %>%
select(latitude,longitude,county) %>%
group_by(county) %>%
na.omit() %>%
summarise_all('mean') %>%
rename(County=county)
county_centers
county_centers[county_centers$County=='Denver',] = c('Denver',40,-105)
county_centers
county_centers[county_centers$County=='Denver',2:3] = c(40,-105)
zip_file = 'zip_codes_states.csv'
if(!file.exists(zip_file)){
url = 'http://notebook.gaslampmedia.com/wp-content/uploads/2013/08/zip_codes_states.csv'
download.file(url,zip_file)}
co_zipcodes <- read.csv(zip_file, stringsAsFactors = F) %>% filter(state=='CO')
county_centers <- co_zipcodes %>%
filter(state=='CO') %>%
select(latitude,longitude,county) %>%
group_by(county) %>%
na.omit() %>%
summarise_all('mean') %>%
rename(County=county)
# Nudge Denver's coordinates
county_centers[county_centers$County=='Denver',2:3] = c(40,-105)
county_centers
knitr::opts_chunk$set(echo = TRUE)
setwd('../data')
source('get_data.R')
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_dollartype = c('USD Total','perCapita','perStore')[1]
estimate_option = T
# Create summary for each County and Type, summing sales across years
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
# Filter to only include 1 kind
my_summary = cannabis.summary %>% filter(kind==my_kind) %>% arrange(USD)
if (estimate_option){
my_summary_plot <- my_summary %>% group_by(County) %>%
summarise(n.stores=mean(n.stores),
latitude=mean(latitude),
longitude=mean(longitude),
USD.total=sum(USD),
perCapita.total=sum(perCapita),
perStore.total=sum(perStore))
my_summary_reported <- filter(my_summary,!is.Estimate) %>%
select(County,USD:perStore) %>%
rename(USD.reported=USD,
perCapita.reported=perCapita,
perStore.reported=perStore)
my_summary_plot <- full_join(my_summary_plot,my_summary_reported)
} else {
mysummary_plot <- filter(my_summary,!is.Estimate)
}
my_summary_plot
#Thunderforest API Key Required Thuderforest.Transport Thundrforest.Landscape Thunderforest.Pioneer
my_summary_plot %>% leaflet() %>% addProviderTiles(providers$CartoDB) %>%
addCircles(radius=sqrt(my_summary_plot$USD.total)*2,
weight=0,
color='green',
fillOpacity = .3)
my_summary_plot
no_cannabis <- my_summary_plot %>% filter(USD.total==0)
with_cannabis <- my_summary_plot %>% filter(USD.total>0)
with_reports <- my_summary_plot %>% filter(USD.reported>0)
radiusscale = 0.5
#mycannabissalesmap <- my_summary_plot %>% leaflet() %>% addTiles()%>%
my_summary_plot %>% leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6) %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$USD.total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$USD.reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$USD.total/10^6,1)),
' Million USD', sep=''),
color='#236B8E',weight=0,fillOpacity = 0.3) %>%
#if (estimate_option) {
# Circles located at counties with Cannabis with radius indicating estimated total sales
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$USD.reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$USD.reported/10^6,1)),
' Million USD', sep=''),
color='#66CD00',weight = 0,fillOpacity = .3)
#}
#           mycannabissalesmap <- mycannabissalesmap %>%
#mycannabissalesmap
radiusscale = 1
my_summary_plot %>% leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6) %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$USD.total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$USD.reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$USD.total/10^6,1)),
' Million USD', sep=''),
color='#236B8E',weight=0,fillOpacity = 0.3) %>%
#if (estimate_option) {
# Circles located at counties with Cannabis with radius indicating estimated total sales
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$USD.reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$USD.reported/10^6,1)),
' Million USD', sep=''),
color='#66CD00',weight = 0,fillOpacity = .3)
knitr::opts_chunk$set(echo = TRUE)
setwd('../data')
source('get_data.R')
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_dollartype = c('USD Total','perCapita','perStore')[1]
estimate_option = T
# Create summary for each County and Type, summing sales across years
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
# Filter to only include 1 kind
my_summary = cannabis.summary %>% filter(kind==my_kind) %>% arrange(USD)
if (estimate_option){
my_summary_plot <- my_summary %>% group_by(County) %>%
summarise(n.stores=mean(n.stores),
latitude=mean(latitude),
longitude=mean(longitude),
USD.total=sum(USD),
perCapita.total=sum(perCapita),
perStore.total=sum(perStore))
my_summary_reported <- filter(my_summary,!is.Estimate) %>%
select(County,USD:perStore) %>%
rename(USD.reported=USD,
perCapita.reported=perCapita,
perStore.reported=perStore)
my_summary_plot <- full_join(my_summary_plot,my_summary_reported)
} else {
mysummary_plot <- filter(my_summary,!is.Estimate)
}
my_summary_plot
no_cannabis <- my_summary_plot %>% filter(USD.total==0)
with_cannabis <- my_summary_plot %>% filter(USD.total>0)
with_reports <- my_summary_plot %>% filter(USD.reported>0)
radiusscale = 1
#mycannabissalesmap <- my_summary_plot %>% leaflet() %>% addTiles()%>%
my_summary_plot %>% leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6) %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$USD.total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$USD.reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$USD.total/10^6,1)),
' Million USD', sep=''),
color='#236B8E',weight=0,fillOpacity = 0.3) %>%
#if (estimate_option) {
# Circles located at counties with Cannabis with radius indicating estimated total sales
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$USD.reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$USD.reported/10^6,1)),
' Million USD', sep=''),
color='#66CD00',weight = 0,fillOpacity = .3)
#}
#           mycannabissalesmap <- mycannabissalesmap %>%
#mycannabissalesmap
knitr::opts_chunk$set(echo = TRUE)
setwd('../data')
source('get_data.R')
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_dollartype = c('USD Total','perCapita','perStore')[1]
estimate_option = T
# Create summary for each County and Type, summing sales across years
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
# Filter to only include 1 kind
my_summary = cannabis.summary %>% filter(kind==my_kind) %>% arrange(USD)
if (estimate_option){
my_summary_plot <- my_summary %>% group_by(County) %>%
summarise(n.stores=mean(n.stores),
latitude=mean(latitude),
longitude=mean(longitude),
USD.total=sum(USD),
perCapita.total=sum(perCapita),
perStore.total=sum(perStore))
my_summary_reported <- filter(my_summary,!is.Estimate) %>%
select(County,USD:perStore) %>%
rename(USD.reported=USD,
perCapita.reported=perCapita,
perStore.reported=perStore)
my_summary_plot <- full_join(my_summary_plot,my_summary_reported)
} else {
mysummary_plot <- filter(my_summary,!is.Estimate)
}
my_summary_plot
no_cannabis <- my_summary_plot %>% filter(USD.total==0)
with_cannabis <- my_summary_plot %>% filter(USD.total>0)
with_reports <- my_summary_plot %>% filter(USD.reported>0)
radiusscale = 1
#mycannabissalesmap <- my_summary_plot %>% leaflet() %>% addTiles()%>%
my_summary_plot %>% leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6) %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$USD.total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$USD.reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$USD.total/10^6,1)),
' Million USD', sep=''),
color='#236B8E',weight=0,fillOpacity = 0.3) %>%
#if (estimate_option) {
# Circles located at counties with Cannabis with radius indicating estimated total sales
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$USD.reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$USD.reported/10^6,1)),
' Million USD', sep=''),
color='#66CD00',weight = 0,fillOpacity = .3)
#}
#           mycannabissalesmap <- mycannabissalesmap %>%
#mycannabissalesmap
knitr::opts_chunk$set(echo = TRUE)
setwd('../data')
source('get_data.R')
# options for users
my_kind = c('Combined','medical','recreational')[3]
my_dollartype = c('USD Total','perCapita','perStore')[1]
estimate_option = T
# Create summary for each County and Type, summing sales across years
cannabis.summary <- cannabis.sales %>%
group_by(County,type,is.medical,is.Combined,is.Estimate,kind) %>%
summarise(n.stores=mean(n.stores,na.rm=T),
USD=sum(USD,na.rm=T),
perCapita=sum(perCapita,na.rm=T),
perStore=sum(perStore,na.rm=T),
latitude=mean(latitude),
longitude=mean(longitude)) %>%
filter(!is.na(County))
# Filter to only include 1 kind
my_summary = cannabis.summary %>% filter(kind==my_kind) %>% arrange(USD)
if (estimate_option){
my_summary_plot <- my_summary %>% group_by(County) %>%
summarise(n.stores=mean(n.stores),
latitude=mean(latitude),
longitude=mean(longitude),
USD.total=sum(USD),
perCapita.total=sum(perCapita),
perStore.total=sum(perStore))
my_summary_reported <- filter(my_summary,!is.Estimate) %>%
select(County,USD:perStore) %>%
rename(USD.reported=USD,
perCapita.reported=perCapita,
perStore.reported=perStore)
my_summary_plot <- full_join(my_summary_plot,my_summary_reported)
} else {
mysummary_plot <- filter(my_summary,!is.Estimate)
}
my_summary_plot
no_cannabis <- my_summary_plot %>% filter(USD.total==0)
with_cannabis <- my_summary_plot %>% filter(USD.total>0)
with_reports <- my_summary_plot %>% filter(USD.reported>0)
radiusscale = 1
#mycannabissalesmap <- my_summary_plot %>% leaflet() %>% addTiles()%>%
my_summary_plot %>% leaflet() %>% addProviderTiles(providers$CartoDB) %>%
setView(lat=40,lng=-105,zoom=6) %>%
addCircles(lat=with_cannabis$latitude,
lng=with_cannabis$longitude,
radius = sqrt(with_cannabis$USD.total*radiusscale),
label=paste(with_cannabis$County,': Report $',
as.character(round(with_cannabis$USD.reported/10^6,1)),
', Estimate $',
as.character(round(with_cannabis$USD.total/10^6,1)),
' Million USD', sep=''),
color='#236B8E',weight=0,fillOpacity = 0.3) %>%
#if (estimate_option) {
# Circles located at counties with Cannabis with radius indicating estimated total sales
addCircles(lat=with_reports$latitude,
lng=with_reports$longitude,
radius=sqrt(with_reports$USD.reported*radiusscale),
label=paste(with_reports$County,': Report $',
as.character(round(with_reports$USD.reported/10^6,1)),
' Million USD', sep=''),
color='#66CD00',weight = 0,fillOpacity = .3)
#}
#           mycannabissalesmap <- mycannabissalesmap %>%
#mycannabissalesmap
